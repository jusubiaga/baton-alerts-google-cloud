import * as protos from '../../protos/protos';
type ITableSchema = {
    /**
     * Describes the fields in a table.
     */
    fields?: Array<ITableFieldSchema>;
};
type ITableFieldSchema = {
    /**
     * [Optional] The field description. The maximum length is 1,024 characters.
     */
    description?: string;
    /**
     * [Optional] Describes the nested schema fields if the type property is set to RECORD.
     */
    fields?: Array<ITableFieldSchema>;
    /**
     * [Optional] The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.
     */
    mode?: string;
    /**
     * [Required] The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 300 characters.
     */
    name?: string;
    /**
     * [Required] The field data type. Possible values include STRING, BYTES, INTEGER, INT64 (same as INTEGER), FLOAT, FLOAT64 (same as FLOAT), NUMERIC, BIGNUMERIC, BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME, DATETIME, INTERVAL, RECORD (where RECORD indicates that the field contains a nested schema) or STRUCT (same as RECORD).
     */
    type?: string;
    /**
     * Represents the type of a field element.
     */
    rangeElementType?: {
        /**
         * Required. The type of a field element. For more information, see TableFieldSchema.type.
         */
        type?: string;
    };
};
type StorageTableSchema = protos.google.cloud.bigquery.storage.v1.ITableSchema;
declare const StorageTableSchema: typeof protos.google.cloud.bigquery.storage.v1.TableSchema;
/**
 * Converts a bigquery Schema into the protobuf-based TableSchema used
 * by the BigQuery Storage WriteClient.
 * @param schema - a BigQuery TableSchema
 * @return StorageTableSchema
 */
export declare function convertBigQuerySchemaToStorageTableSchema(schema: ITableSchema): StorageTableSchema;
export {};
