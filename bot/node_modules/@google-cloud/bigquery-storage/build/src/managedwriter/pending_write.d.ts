import * as protos from '../../protos/protos';
type AppendRowsResponse = protos.google.cloud.bigquery.storage.v1.IAppendRowsResponse;
type AppendRowRequest = protos.google.cloud.bigquery.storage.v1.IAppendRowsRequest;
/**
 * PendingWrite tracks state for a set of rows that are part of a single
 * append request. PendingWrites have a Promise interface to await for
 * append results, as well as any errors encountered while processing
 * the request.
 */
export declare class PendingWrite {
    private request;
    private response?;
    private attempts;
    private promise;
    private resolveFunc?;
    private rejectFunc?;
    constructor(request: AppendRowRequest);
    /**
     * Increase number of attempts and return current value.
     *
     * @private
     * @internal
     * @returns {number} current number of attempts
     */
    _increaseAttempts(): number;
    /**
     * Resolve pending write with error or AppendRowResponse.
     * This resolves the promise accessed via GetResult()
     *
     * @see GetResult
     *
     * @private
     * @internal
     * @returns {number} current number of attempts
     */
    _markDone(err: Error | null, response?: AppendRowsResponse): void;
    /**
     * Abort pending write so calls to GetResult can be unblocked/cancelled.
     */
    abort(): void;
    /**
     * Access the AppendRowRequest that generated this pending write request.
     */
    getRequest(): AppendRowRequest;
    /**
     * Promise interface to await for
     * append results, as well as any errors encountered while processing
     * the request.
     */
    getResult(): Promise<AppendRowsResponse>;
}
export {};
