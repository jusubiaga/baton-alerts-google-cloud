import * as protos from '../../protos/protos';
import { PendingWrite } from './pending_write';
import { StreamConnection } from './stream_connection';
type AppendRowRequest = protos.google.cloud.bigquery.storage.v1.IAppendRowsRequest;
type IInt64Value = protos.google.protobuf.IInt64Value;
type ProtoData = protos.google.cloud.bigquery.storage.v1.AppendRowsRequest.IProtoData;
type IDescriptorProto = protos.google.protobuf.IDescriptorProto;
type MissingValueInterpretation = AppendRowRequest['defaultMissingValueInterpretation'];
type MissingValueInterpretationMap = {
    [column: string]: MissingValueInterpretation;
};
export interface WriterOptions {
    /** The stream connection to the BigQuery streaming insert operation. */
    connection: StreamConnection;
    /** The proto descriptor for the stream. */
    protoDescriptor: IDescriptorProto;
    /**
     * Controls how missing values are interpreted for a given stream.
     * `missingValueInterpretations` set for individual columns can override the default chosen
     * with this option.
     *
     * For example, if you want to write
     * `NULL` instead of using default values for some columns, you can set
     * `defaultMissingValueInterpretation` to `DEFAULT_VALUE` and at the same
     * time, set `missingValueInterpretations` to `NULL_VALUE` on those columns.
     */
    defaultMissingValueInterpretation?: MissingValueInterpretation;
    /**
     * Control how missing values are interpreted for individual columns.
     *
     * You must provide an object to indicate how to interpret missing value for some fields. Missing
     * values are fields present in user schema but missing in rows. The key is
     * the field name. The value is the interpretation of missing values for the
     * field.
     *
     * For example, the following option would indicate that missing values in the "foo"
     * column are interpreted as null, whereas missing values in the "bar" column are
     * treated as the default value:
     *
     * {
     *     "foo": 'DEFAULT_VALUE',
     *		 "bar": 'NULL_VALUE',
     * }
     *
     * If a field is not in this object and has missing values, the missing values
     * in this field are interpreted as NULL unless overridden with a default missing
     * value interpretation.
     *
     * Currently, field name can only be top-level column name, can't be a struct
     * field path like 'foo.bar'.
     */
    missingValueInterpretations?: MissingValueInterpretationMap;
    /**
     * Trace ID allows instruments requests to the service with a custom trace prefix.
     * This is generally for diagnostic purposes only.
     */
    traceId?: string;
}
/**
 * A BigQuery Storage API Writer that can be used to write data into BigQuery Table
 * using the Storage API.
 *
 * @class
 * @memberof managedwriter
 */
export declare class Writer {
    private _protoDescriptor;
    private _streamConnection;
    private _defaultMissingValueInterpretation?;
    private _traceId?;
    private _missingValueInterpretations?;
    /**
     * Creates a new Writer instance.
     *
     * @param {WriterOptions} params - The parameters for the Writer.
     *   See WriterOptions docs for more information.
     */
    constructor(params: WriterOptions);
    traceId(): string;
    /**
     * Update the proto descriptor for the Writer.
     * Internally a reconnection event is gonna happen to apply
     * the new proto descriptor.
     *
     * @param {IDescriptorProto} protoDescriptor - The proto descriptor.
     */
    setProtoDescriptor(protoDescriptor: IDescriptorProto): void;
    /**
     * Update how missing values are interpreted for the given stream.
     *
     * @param {MissingValueInterpretation} defaultMissingValueInterpretation
     */
    setDefaultMissingValueInterpretation(defaultMissingValueInterpretation: MissingValueInterpretation): void;
    /**
     * Update how missing values are interpreted for individual columns.
     *
     * @param {MissingValueInterpretationMap} missingValueInterpretations
     */
    setMissingValueInterpretations(missingValueInterpretations: MissingValueInterpretationMap): void;
    /**
     * Schedules the writing of rows at given offset.
     *
     * @param {google.cloud.bigquery.storage.v1.IProtoRows|null} rows - the rows in serialized format to write to BigQuery.
     * @param {number|Long|string|null} offsetValue - the offset of the first row.
     * @returns {managedwriter.PendingWrite} The pending write
     **/
    appendRows(rows: ProtoData['rows'], offsetValue?: IInt64Value['value']): PendingWrite;
    close(): void;
}
export {};
