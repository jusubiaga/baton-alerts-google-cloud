"use strict";
// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.setLogFunction = exports.parseStorageErrors = exports.PendingStream = exports.CommittedStream = exports.BufferedStream = exports.DefaultStream = exports.JSONWriter = exports.Writer = exports.WriterClient = void 0;
/**
 * Package managedwriter provides an EXPERIMENTAL thick client around the
 * BigQuery storage API's BigQueryWriteClient.
 * More information about this new write client may also be found in
 * the public documentation: https://cloud.google.com/bigquery/docs/write-api
 *
 * It is EXPERIMENTAL and subject to change or removal without notice. This is primarily to signal that this
 * package may still make breaking changes to existing methods and functionality.
 *
 * @namespace managedwriter
 */
var writer_client_1 = require("./writer_client");
Object.defineProperty(exports, "WriterClient", { enumerable: true, get: function () { return writer_client_1.WriterClient; } });
var writer_1 = require("./writer");
Object.defineProperty(exports, "Writer", { enumerable: true, get: function () { return writer_1.Writer; } });
var json_writer_1 = require("./json_writer");
Object.defineProperty(exports, "JSONWriter", { enumerable: true, get: function () { return json_writer_1.JSONWriter; } });
var stream_types_1 = require("./stream_types");
Object.defineProperty(exports, "DefaultStream", { enumerable: true, get: function () { return stream_types_1.DefaultStream; } });
Object.defineProperty(exports, "BufferedStream", { enumerable: true, get: function () { return stream_types_1.BufferedStream; } });
Object.defineProperty(exports, "CommittedStream", { enumerable: true, get: function () { return stream_types_1.CommittedStream; } });
Object.defineProperty(exports, "PendingStream", { enumerable: true, get: function () { return stream_types_1.PendingStream; } });
var error_1 = require("./error");
Object.defineProperty(exports, "parseStorageErrors", { enumerable: true, get: function () { return error_1.parseStorageErrors; } });
var logger_1 = require("./logger");
Object.defineProperty(exports, "setLogFunction", { enumerable: true, get: function () { return logger_1.setLogFunction; } });
//# sourceMappingURL=index.js.map