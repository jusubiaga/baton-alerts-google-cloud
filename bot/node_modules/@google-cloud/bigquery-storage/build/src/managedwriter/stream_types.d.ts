import * as protos from '../../protos/protos';
export type WriteStream = protos.google.cloud.bigquery.storage.v1.IWriteStream;
export type WriteStreamType = WriteStream['type'] | 'DEFAULT';
export declare const WriteStreamType: typeof protos.google.cloud.bigquery.storage.v1.WriteStream.Type;
/**
 * DefaultStream most closely mimics the legacy bigquery
 * tabledata.insertAll semantics. Successful inserts are
 * committed immediately, and there's no tracking offsets as
 * all writes go into a "default" stream that always exists
 * for a table.
 *
 * @memberof managedwriter
 */
export declare const DefaultStream = "DEFAULT";
/**
 * CommittedStream appends data immediately, but creates a
 * discrete stream for the work so that offset tracking can
 * be used to track writes.
 *
 * @memberof managedwriter
 */
export declare const CommittedStream = "COMMITTED";
/**
 * BufferedStream is a form of checkpointed stream, that allows
 * you to advance the offset of visible rows via Flush operations.
 *
 * @memberof managedwriter
 */
export declare const BufferedStream = "BUFFERED";
/**
 * PendingStream is a stream in which no data is made visible to
 * readers until the stream is finalized and committed explicitly.
 *
 * @memberof managedwriter
 */
export declare const PendingStream = "PENDING";
export declare function streamTypeToEnum(streamType: WriteStreamType): WriteStream['type'];
